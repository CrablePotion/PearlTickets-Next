plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT' apply(false)
	id 'maven-publish'
}

apply plugin: 'java'

project (":Fabric-1.20") {

	apply plugin: 'fabric-loom'

	archivesBaseName = project.archives_base_name + "-mc" + project.minecraft_version
	setVersion(project.mod_version)
	setGroup(project.maven_group + ".1_20_0")

	repositories {}

	dependencies {
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

		modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

		implementation 'com.google.code.gson:gson:2.10.1'
	}

	processResources {
		inputs.property "version", project.version
		filesMatching("fabric.mod.json") {
			expand "version": project.version
		}
	}

	tasks.withType(JavaCompile).configureEach {
		it.options.release = 17
	}

	java {
		withSourcesJar()
		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
	}

	jar {
		from("LICENSE") {
			rename { "${it}_${project.base.archivesBaseName.get()}"}
		}
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
			}
		}
		repositories {}
	}

}

project (":Fabric-1.19.4") {

	apply plugin: 'fabric-loom'

	archivesBaseName = project.archives_base_name + "-mc" + project.minecraft_version
	setVersion(project.mod_version)
	setGroup(project.maven_group + ".1_19_4")

	repositories {}

	dependencies {
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

		modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

		implementation 'com.google.code.gson:gson:2.10.1'
	}

	processResources {
		inputs.property "version", project.version
		filesMatching("fabric.mod.json") {
			expand "version": project.version
		}
	}

	tasks.withType(JavaCompile).configureEach {
		it.options.release = 17
	}

	java {
		withSourcesJar()
		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
	}

	jar {
		from("LICENSE") {
			rename { "${it}_${project.base.archivesBaseName}"}
		}
	}

}

project (":Fabric-1.18.2") {

	apply plugin: 'fabric-loom'

	archivesBaseName = project.archives_base_name + "-mc" + project.minecraft_version
	setVersion(project.mod_version)
	setGroup(project.maven_group + ".1_18_2")

	repositories {}

	dependencies {
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

		modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

		implementation 'com.google.code.gson:gson:2.10.1'
	}

	processResources {
		inputs.property "version", project.version
		filesMatching("fabric.mod.json") {
			expand "version": project.version
		}
	}

	tasks.withType(JavaCompile).configureEach {
		it.options.release = 17
	}

	java {
		withSourcesJar()
		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
	}

	jar {
		from("LICENSE") {
			rename { "${it}_${project.base.archivesBaseName}"}
		}
	}

}

project (":Fabric-1.17.1") {

	apply plugin: 'fabric-loom'

	archivesBaseName = project.archives_base_name + "-mc" + project.minecraft_version
	setVersion(project.mod_version)
	setGroup(project.maven_group + ".1_17_1")

	repositories {}

	dependencies {
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

		implementation 'com.google.code.gson:gson:2.10.1'

		modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	}

	processResources {
		inputs.property "version", project.version

		filesMatching("fabric.mod.json") {
			expand "version": project.version
		}
	}

	tasks.withType(JavaCompile).configureEach {
		it.options.encoding = "UTF-8"
		it.options.release = 16
	}

	java {
		sourceCompatibility = JavaVersion.VERSION_16
		targetCompatibility = JavaVersion.VERSION_16
		withSourcesJar()
	}

	jar {
		from("LICENSE") {
			rename { "${it}_${project.base.archivesBaseName}"}
		}
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				artifact(remapJar) {
					builtBy remapJar
				}
				artifact(sourcesJar) {
					builtBy remapSourcesJar
				}
			}
		}
		repositories {}
	}
}
